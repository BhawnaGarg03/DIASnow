<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>sn_ind_tmt_orm.SOARAPI</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>SOARAPI</name>
        <script><![CDATA[var SOARAPI = Class.create();
SOARAPI.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
    getAPIGEEToken: function() {
        try {
            var APIGEEToken = '';
            var r = new sn_ws.RESTMessageV2('GetAPIGEEToken', 'GetToken');
            r.setRequestHeader('Authorization', 'Basic S3VhNjhra2RzWWhzQXR4dFhnT3h4UlFJR0F6VnFTQ1Q6SkNIRjR3Wk9LTExMZzdxUQ==');
            r.setRequestHeader('Content-Type', 'application/json');
            r.setQueryParameter('grant_type', 'client_credentials');
            var response = r.execute();
            var responseBody = response.getBody();
            var httpStatus = response.getStatusCode();
            var SOARToken = '';
            if (httpStatus == '200' || httpStatus == '201') {
                var parseResponse = JSON.parse(responseBody);
                APIGEEToken = parseResponse.access_token;
                gs.info("****APIGEE token******" + APIGEEToken);
            }
        } catch (ex) {
            var message = ex.message;
        }
        return APIGEEToken;
    },
    getSOARToken: function(APIGEEToken) {
        var SOARToken = '';
        try {
            var r = new sn_ws.RESTMessageV2('SOAREndpoint', 'GetSOARToken');
            r.setRequestHeader('Authorization', 'Bearer ' + APIGEEToken);
            r.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            r.setRequestBody('username=servicenow&password=ServiceNow20220809');
            var response = r.execute();
            var responseBody = response.getBody();
            var httpStatus = response.getStatusCode();
            gs.info("*****SOAR token sytatus********" + httpStatus);
            if (httpStatus == '200' || httpStatus == '201') {
                var parseResponse = JSON.parse(responseBody);
                SOARToken = parseResponse.access_token;
                gs.info("****SOAR token******" + SOARToken);

            }
        } catch (ex) {
            var message = ex.message;
        }
        return SOARToken;
    },
    configTenant: function() {
        var soarData = this.getParameter('sysparm_soarData');
        gs.info('*****SOAR Data****' + soarData);

        var soarDataAr = soarData.split(",");
        var orderLineItem = soarDataAr[0];
        var orgKey = soarDataAr[1];
        var orgId = soarDataAr[2];
        var apiKey = soarDataAr[3];
        var apiID = soarDataAr[4];
        var orderTaskSysID = soarDataAr[5];
        var region = '';
        var orderLineGR = new GlideRecord("sn_ind_tmt_orm_order_line_item");
        orderLineGR.addQuery("sys_id", orderLineItem);
        orderLineGR.query();
        var externalID = '';
        if (orderLineGR.next())
            externalID = orderLineGR.external_id;
        gs.info("**SOAR external id**" + externalID); //
        var grCharacteristicValue = new GlideRecord("sn_ind_tmt_orm_order_characteristic_value");
        grCharacteristicValue.addEncodedQuery("order_line_item=" + orderLineItem + "^characteristic=611f4f2987d749d025a20edc0ebb35b6^ORcharacteristic=7ace2fa287eb8d1084b2a18e0ebb358c");
        grCharacteristicValue.query();
        while (grCharacteristicValue.next()) {
            if (grCharacteristicValue.characteristic == '7ace2fa287eb8d1084b2a18e0ebb358c') {
                grCharacteristicValue.characteristic_option_value = orgId;
                grCharacteristicValue.update();
                gs.info("******SOAR Org ID gets stored in characteristic*********");
            } else if (grCharacteristicValue.characteristic == '7ace2fa287eb8d1084b2a18e0ebb358c')
                region = grCharacteristicValue.characteristic_option_value;
        }

        var APIGEEToken = this.getAPIGEEToken();
        var SOARToken = this.getSOARToken(APIGEEToken);
        try {
            var r = new sn_ws.RESTMessageV2('SOAREndpoint', 'POSTDetails');
            r.setRequestHeader('Authorization', 'Bearer ' + APIGEEToken);
            r.setRequestHeader('X-Auth', 'Bearer ' + SOARToken);
            r.setRequestHeader('Accept', 'application/json');
            r.setStringParameterNoEscape('sid', externalID);
            r.setStringParameterNoEscape('org_key', orgKey);
            r.setStringParameterNoEscape('snow_id', externalID);
            r.setStringParameterNoEscape('api_id', apiID);
            if (region == '')
                r.setStringParameterNoEscape('region', 'NA');
            else
                r.setStringParameterNoEscape('region', region);
            r.setStringParameter('org_id', orgId);
            r.setStringParameterNoEscape('api_key', apiKey);
            var returnReponse = '';
            var response = r.execute();
            var soarResponseBody = response.getBody();
            var httpStatus = response.getStatusCode();
            gs.info("********SOAR Config Tenant status********" + httpStatus);
            if (httpStatus == '200' || httpStatus == '201') {
                returnReponse = "Details have been transferred to SOAR successfully";
                var orderTaskGR = new GlideRecord("sn_ind_tmt_orm_order_task");
                orderTaskGR.addQuery("sys_id", orderTaskSysID);
                orderTaskGR.query();
                if (orderTaskGR.next()) {
                    orderTaskGR.u_soar_response = true;
                    orderTaskGR.update();
                }

            } else
                returnReponse = "Details have not been transferred to SOAR successfully with Error Code " + httpStatus;
        } catch (ex) {
            var message = ex.message;
        }
        return returnReponse;
    },


    createUserInSOAR: function(externalID, orderContact, orderLineNum) {
        gs.info("*******SOAR Create User Called***************");
        var returnReponse = '';
        var APIGEEToken = this.getAPIGEEToken();
        var SOARToken = this.getSOARToken(APIGEEToken);
        var userData = [];
        var technicalemail = '';
        var technicalFirstName = '';
        var technicalLastName = '';
        var orgID = '';
        var grCharacteristicValue = new GlideRecord("sn_ind_tmt_orm_order_characteristic_value");
        grCharacteristicValue.addEncodedQuery("order_line_item=" + orderLineNum + "^characteristic=611f4f2987d749d025a20edc0ebb35b6");
        grCharacteristicValue.query();
        if (grCharacteristicValue.next()) {
            orgID = grCharacteristicValue.characteristic_option_value;
            gs.info("*******SOAR ORGID**********" + orgID);
        }
        try {
            var r = new sn_ws.RESTMessageV2('SOAREndpoint', 'createUser');
            r.setRequestHeader('Authorization', 'Bearer ' + APIGEEToken);
            r.setRequestHeader('X-Auth', 'Bearer ' + SOARToken);
            r.setRequestHeader('Accept', 'application/json');
            r.setStringParameterNoEscape('org_id', orgID);
            var grOrderLineContact = new GlideRecord("sn_ind_tmt_orm_order_line_item_contact");
            grOrderLineContact.addQuery("order_line_item", orderLineNum);
            grOrderLineContact.query();
            if (grOrderLineContact.next()) {
                technicalemail = grOrderLineContact.email;
                technicalFirstName = grOrderLineContact.first_name;
                technicalLastName = grOrderLineContact.last_name;
            }

            var grContact = new GlideRecord("customer_contact");
            grContact.addQuery("sys_id", orderContact);
            grContact.query();
            if (grContact.next()) {
                var contactData = {
                    "users": [{

                            "email_address": grContact.email,
                            "first_name": grContact.first_name,
                            "last_name": grContact.last_name,
                            "customer_role": "Admin",
                            "service_level": "Self-Managed"
                        },
                        {
                            "email_address": technicalemail,
                            "first_name": technicalFirstName,
                            "last_name": technicalLastName,
                            "customer_role": "Admin",
                            "service_level": "Self-Managed"
                        }
                    ],
                    "snow_id": externalID

                };
                userData.push(contactData);
            }
            r.setStringParameterNoEscape('userData', userData);
            var response = r.execute();
            var responseBody = response.getBody();
            var httpStatus = response.getStatusCode();
            gs.info("****SOAR User response******" + httpStatus);
            if (httpStatus == '200' || httpStatus == '201') {
                returnReponse = "User is created successfully";
            } else
                returnReponse = "User is nor created due to following error code" + httpStatus;
        } catch (ex) {
            var message = ex.message;
        }
        return returnReponse;
    },
    type: 'SOARAPI'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>AD13956</sys_created_by>
        <sys_created_on>2022-08-23 08:59:44</sys_created_on>
        <sys_id>04030fa48729d510b9342f07cebb3574</sys_id>
        <sys_mod_count>28</sys_mod_count>
        <sys_name>SOARAPI</sys_name>
        <sys_package display_value="Order Management for Telecom, Media &amp; Tech" source="sn_ind_tmt_orm">3c58f5d55b0310102dff5e92dc81c711</sys_package>
        <sys_policy/>
        <sys_scope display_value="Order Management for Telecom, Media &amp; Tech">3c58f5d55b0310102dff5e92dc81c711</sys_scope>
        <sys_update_name>sys_script_include_04030fa48729d510b9342f07cebb3574</sys_update_name>
        <sys_updated_by>AD13956</sys_updated_by>
        <sys_updated_on>2022-09-01 14:00:07</sys_updated_on>
    </sys_script_include>
</record_update>
